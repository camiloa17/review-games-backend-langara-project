{"version":3,"sources":["Login/loginStyle.module.css","NavBar/navBarStyles.module.css","NavBar/Search/Search.js","Context/AuthContext.js","NavBar/NavLinks/NavLinks.js","NavBar/NavBarApp.js","Login/Login.js","useAuth/useAuth.js","SharedComponents/CarouselImgs/CarouselImgs.js","SharedComponents/ReviewCards/ReviewCards.js","localPageData.js","Home/Home.js","SearchPage/SearchPage.js","ReviewPage/ReviewPage.js","Genre/ReadGenre/ReadGenre.js","Genre/CreateGenre/CreateGenre.js","Genre/DeleteGenre/DeleteGenre.js","Genre/UpdateGenre/UpdateGenre.js","Genre/Genre.js","Platform/ReadPlatform/ReadPlatform.js","Platform/CreatePlatform/CreatePlatform.js","Platform/DeletePlatform/DeletePlatform.js","Platform/UpdatePlatform/UpdatePlatform.js","Platform/Platform.js","Studio/ReadStudio/ReadStudios.js","Studio/CreateStudio/CreateStudio.js","Studio/DeleteStudio/DeleteStudio.js","Studio/UpdateStudio/UpdateStudio.js","Studio/Studio.js","Game/ReadGame/ReadGame.js","Game/CreateGame/CreateGame.js","Game/DeleteGame/DeleteGame.js","Game/UpdateGame/UpdateGame.js","Game/Game.js","Publish/Publish.js","Xbox/Xbox.js","Playstation/Playstation.js","PC/PC.js","Nintendo/Nintendo.js","App.js","reportWebVitals.js","index.js","SharedComponents/Styles/sharedStyles.module.css"],"names":["module","exports","timer","Search","useState","searchQuery","setSearchQuery","history","useHistory","Form","onSubmit","e","preventDefault","inline","FormControl","type","placeholder","value","onChange","event","clearTimeout","setTimeout","push","onSearchChange","target","className","AuthContext","createContext","NavLinks","isAuth","useContext","Nav","activeClassName","exact","to","user","Button","variant","onClick","signout","NavBarApp","Navbar","navBarStyles","NavBarFlex","bg","Brand","Login","context","styles","CardContainer","CardLogin","signin","Group","Label","Control","useAuth","setUser","useEffect","window","localStorage","getItem","setItem","removeItem","CarouselImgs","props","Carousel","pictures","map","imgObj","Item","src","img","alt","ReviewCards","id","Card","Img","Body","Title","style","color","title","Text","content","length","slice","Footer","lastUpdated","homeCarouselImgs","xboxCarouselImgs","pcCarImgs","playstationImgs","nintendoImgs","Home","currentReviews","setCurrentReviews","a","fetch","data","json","read","getData","padding","boxWithShadow","marginBottom","CardColumns","review","reviewID","cover","date_created","SearchPage","query","useParams","searchReviews","setSearchReviews","ReviewPage","reviewid","setReview","display","justifyContent","width","height","gamename","gameStudio","genre","numberOfPlayers","reviewerrating","ReadGenre","genres","gen","Badge","marginRight","pill","genrename","CreateGenre","genreName","setGenreName","onSubmitCreate","method","headers","body","JSON","stringify","charAt","toUpperCase","submit","setRefresh","DeleteGenre","genreToDelete","setGenreToDelete","onSubmitDelete","as","UpdateGenre","genreToUpdate","setGenreToUpdate","genreUpdateValue","setGenreUpdateValue","onSubmitUpdate","Genre","refresh","setGenres","ReadPlatform","platforms","plat","platformName","CreatePlatform","setPlatformName","DeletePlatform","platformToDelete","setPlatformToDelete","UpdatePlatform","platformToUpdate","setPlatformToUpdate","platformUpdateValue","setPlatformUpdateValue","Platform","setPlatforms","ReadStudios","studios","studio","studioname","CreateStudio","studioName","setStudioName","DeleteStudio","studioToDelete","setStudioToDelete","UpdateStudio","studioToUpdate","setStudioToUpdate","studioUpdateValue","setStudioUpdateValue","Studio","setStudios","ReadGame","games","game","maxWidth","numberOfPLayers","budget","toLocaleString","minRequirements","Date","releaseDate","gameID","CreateGame","gameName","setGameName","setGenre","setStudio","platform","setPlatform","coverUrl","setCoverUrl","setNumberOfPlayers","setBudget","minReq","setMinReq","dateCreated","setDateCreated","selected","useRef","gameObject","ref","multiple","node","current","selectedVal","children","filter","opt","getSelectedOptions","rows","DeleteGame","gameToDelete","setGameToDelete","UpdateGame","gameToEdit","setGameToEdit","g","parseInt","replaceAll","split","gamedate","year","getFullYear","month","getMonth","date","getDate","Game","setGames","Publish","gameToWrite","setGameToWrite","users","setUsers","userWhoWrites","setUserWhoWrites","supervisor","setSupervisor","setTitle","rating","setRating","setContent","author","employeeID","employeename","max","min","step","Xbox","Playstation","Pc","Nintendo","App","auth","Provider","path","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eae88e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardContainer\":\"loginStyle_CardContainer__8ge2W\",\"CardLogin\":\"loginStyle_CardLogin__3AIBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBarFlex\":\"navBarStyles_NavBarFlex__3grC-\"};","import { useState } from 'react';\r\nimport { Form, FormControl } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nlet timer;\r\nexport default function Search() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const history = useHistory();\r\n  const onSearchChange = (searchQuery) => {\r\n    clearTimeout(timer);\r\n    setSearchQuery(searchQuery);\r\n    timer = setTimeout(() => history.push(`/search/${searchQuery}`), 500);\r\n  };\r\n  return (\r\n    <Form onSubmit={(e)=>e.preventDefault()} inline>\r\n      <FormControl\r\n        type='text'\r\n        placeholder='Search'\r\n        value={searchQuery}\r\n        onChange={(event) => onSearchChange(event.target.value)}\r\n        className='mr-sm-2'\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n","import {useContext,createContext} from 'react';\r\n\r\nexport const AuthContext= createContext();\r\n\r\nexport function useAuthContext(){\r\n    return useContext(AuthContext);\r\n}","import { useContext } from 'react';\r\nimport { Nav,Button } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AuthContext } from '../../Context/AuthContext';\r\nexport default function NavLinks() {\r\n  const isAuth = useContext(AuthContext);\r\n \r\n  return (\r\n    <Nav>\r\n      <NavLink className='nav-link' activeClassName='active' exact to='/'>\r\n        Home\r\n      </NavLink>\r\n      <NavLink className='nav-link' activeClassName='active' to='/xbox'>\r\n        Xbox\r\n      </NavLink>\r\n      <NavLink className='nav-link' activeClassName='active' to='/playstation'>\r\n        Playstation\r\n      </NavLink>\r\n      <NavLink className='nav-link' activeClassName='active' to='/pc'>\r\n        PC\r\n      </NavLink>\r\n      <NavLink className='nav-link' activeClassName='active' to='/Nintendo'>\r\n        Nintendo\r\n      </NavLink>\r\n      {isAuth.user ? (<>\r\n        <NavLink className='nav-link' activeClassName='active' to='/publish'>\r\n          Publish\r\n        </NavLink>\r\n        <NavLink className='nav-link' activeClassName='active' to='/studio'>\r\n          Studio\r\n        </NavLink>\r\n        <NavLink className='nav-link' activeClassName='active' to='/platform'>\r\n          Platform\r\n        </NavLink>\r\n        <NavLink className='nav-link' activeClassName='active' to='/genre'>\r\n          Genre\r\n        </NavLink>\r\n        <NavLink className='nav-link' activeClassName='active' to='/games'>\r\n          Games\r\n        </NavLink>\r\n      </>) : (\r\n        <NavLink className='nav-link' activeClassName='active' to='/signin'>\r\n          Sign in\r\n        </NavLink>\r\n      )}\r\n      {isAuth.user && <Button variant='secondary' onClick={()=>isAuth.signout()}>Log out</Button>}\r\n    </Nav>\r\n  );\r\n}\r\n","import { Navbar } from 'react-bootstrap';\r\nimport Search from './Search/Search';\r\nimport NavLinks from './NavLinks/NavLinks';\r\nimport navBarStyles from './navBarStyles.module.css';\r\nexport default function NavBarApp() {\r\n  return (\r\n    <Navbar className={navBarStyles.NavBarFlex} bg='dark' variant='dark'>\r\n      <Navbar.Brand>Story World</Navbar.Brand>\r\n      <NavLinks />\r\n      <Search />\r\n    </Navbar>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { AuthContext } from '../Context/AuthContext';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport styles from './loginStyle.module.css';\r\nimport { Redirect } from 'react-router';\r\n\r\nexport default function Login() {\r\n  const context = useContext(AuthContext);\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    context.signin();\r\n  };\r\n\r\n  return !context.user ? (\r\n    <div className={styles.CardContainer}>\r\n      <div className={styles.CardLogin}>\r\n        <h1>Log in</h1>\r\n        <Form onSubmit={onSubmitForm}>\r\n          <Form.Group>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control type='email' placeholder='Enter email' />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type='password' placeholder='Enter password' />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Log in\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Redirect to='/' />\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction useAuth() {\r\n  const [user, setUser] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    setUser(window.localStorage.getItem('logedin'));\r\n  }, []);\r\n\r\n  const signin = () => {\r\n    window.localStorage.setItem('logedin', true);\r\n    setUser(true);\r\n  };\r\n\r\n  const signout = () => {\r\n    window.localStorage.removeItem('logedin');\r\n    setUser(false);\r\n  };\r\n\r\n  return { user, signin, signout };\r\n}\r\nexport default useAuth;\r\n","import { Carousel } from 'react-bootstrap';\r\nexport default function CarouselImgs(props) {\r\n    //Pictures are 2560 * 1440\r\n  return (\r\n    <Carousel>\r\n        {props.pictures.map(imgObj=>(\r\n            <Carousel.Item key={imgObj.alt}>\r\n            <img\r\n              className='d-block w-100'\r\n              src={imgObj.img}\r\n              alt={imgObj.alt}\r\n            />\r\n          </Carousel.Item>\r\n        ))}\r\n     \r\n    </Carousel>\r\n  );\r\n}\r\n","import { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ReviewCards(props) {\r\n  return (\r\n    <Link to={`/review/${props.id}`} >\r\n      <Card>\r\n        <Card.Img variant='top' src={props.img} />\r\n        <Card.Body>\r\n          <Card.Title style={{color:'black'}} >{props.title}</Card.Title>\r\n          <Card.Text style={{color:'#212529'}}>\r\n            {props.content.length > 100 ? props.content.slice(0,200) + '...' : props.content}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <small className='text-muted'>{props.lastUpdated}</small>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n\r\n","\r\n\r\nexport const homeCarouselImgs =[\r\n    {\r\n      img:\r\n        'https://th.bing.com/th/id/R270819fdb152a6fe1c505527386d7094?rik=2SteRiQ%2fTgReLg&riu=http%3a%2f%2fwallup.net%2fwp-content%2fuploads%2f2016%2f05%2f24%2f327820-video_games-Battlefield_4-artwork.jpg&ehk=Kky8W5hFB000Vhhw6n%2bYb%2f3IL9uQ0s7ZRiH7Qp0rx8c%3d&risl=&pid=ImgRaw',\r\n      alt: 'battle field 5',\r\n    },\r\n    {\r\n      img:\r\n        'https://10wallpaper.com/wallpaper/2560x1440/2008/Halo_Infinite_2020_Video_Game_4K_HD_Poster_2560x1440.jpg',\r\n      alt: 'Halo 5',\r\n    },\r\n    {\r\n      img:\r\n        'https://gamingcentral.in/wp-content/uploads/2017/11/37950649652_7f5abdce06_o.jpg',\r\n      alt: 'Assasins Creed',\r\n    },\r\n  ];\r\n\r\nexport const xboxCarouselImgs=[\r\n  {\r\n    img:\r\n      'https://i.ytimg.com/vi/wJAix3h-1DM/maxresdefault.jpg',\r\n    alt: 'battle field 5',\r\n  }\r\n]\r\n\r\nexport const pcCarImgs=[\r\n  {\r\n    img:\r\n      'https://cdn.mos.cms.futurecdn.net/U5Fdom8yDwVcEivFjiqajF-1200-80.jpg',\r\n    alt: 'battle field 5',\r\n  }\r\n]\r\n\r\nexport const playstationImgs=[\r\n  {\r\n    img:\r\n      'https://nerdist.com/wp-content/uploads/2020/09/Sony-PlayStation-5-Featured-Image.jpg',\r\n    alt: 'battle field 5',\r\n  }\r\n]\r\n\r\nexport const nintendoImgs=[\r\n  {\r\n    img:\r\n      'https://assets.vg247.com/current/2018/11/nintendo-switch-black-friday-deals-2019-1.jpg',\r\n    alt: 'battle field 5',\r\n  }\r\n]\r\n  ","import { useEffect, useState } from 'react';\r\nimport CarouselImgs from '../SharedComponents/CarouselImgs/CarouselImgs';\r\nimport ReviewCards from '../SharedComponents/ReviewCards/ReviewCards';\r\nimport { CardColumns } from 'react-bootstrap';\r\nimport {homeCarouselImgs} from '../localPageData';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\n\r\nexport default function Home() {\r\n  const [currentReviews, setCurrentReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/reviews/');\r\n      const read = await data.json();\r\n      setCurrentReviews(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CarouselImgs pictures={homeCarouselImgs} />\r\n      <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <h2>Current Reviews</h2>\r\n        <CardColumns>\r\n          {currentReviews.map((review) => (\r\n            <ReviewCards\r\n              key={review.reviewID}\r\n              id={review.reviewID}\r\n              img={review.cover}\r\n              title={review.title}\r\n              content={review.content}\r\n              lastUpdated={review.date_created}\r\n            />\r\n          ))}\r\n        </CardColumns>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { CardColumns } from 'react-bootstrap';\r\nimport ReviewCards from '../SharedComponents/ReviewCards/ReviewCards';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\nexport default function SearchPage() {\r\n  const { query } = useParams();\r\n  const [searchReviews, setSearchReviews] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch(`/api/reviews/search/${query}`);\r\n      const read = await data.json();\r\n      setSearchReviews(read);\r\n    };\r\n    getData();\r\n  }, [query]);\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <h1>Results</h1>\r\n        <div>\r\n          <CardColumns>\r\n            {searchReviews.map((review) => (\r\n              <ReviewCards\r\n                key={review.reviewID}\r\n                id={review.reviewID}\r\n                img={review.cover}\r\n                title={review.title}\r\n                content={review.content}\r\n                lastUpdated={review.date_created}\r\n              />\r\n            ))}\r\n          </CardColumns>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\n\r\nexport default function ReviewPage() {\r\n  const { reviewid } = useParams();\r\n  const [review, setReview] = useState();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch(`/api/reviews/${reviewid}`);\r\n      const read = await data.json();\r\n      setReview(read[0]);\r\n    };\r\n    getData();\r\n  }, [reviewid]);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ padding: '10px' }}>\r\n        <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n          {review&&<>\r\n            <h1>{review.title}</h1>\r\n            <div style={{display:'flex', justifyContent:'space-around',marginBottom:'20px'}} className={styles.boxWithShadow}>\r\n              <div style={{width:'150px', height:'150px'}} ><img style={{width:'100%',height:'100%'}} src={review.cover} alt='game' /></div>\r\n              <div>\r\n                <h5>{review.gamename}</h5>\r\n                <p><strong>Studio: </strong>{review.gameStudio}</p>\r\n                <p><strong>Genre: </strong>{review.genre}</p>\r\n              </div>\r\n              <div>\r\n                <p><strong>No. players: </strong>{review.numberOfPlayers}</p>\r\n                <p><strong>Rating: </strong>{review.reviewerrating}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <p>{review.content}</p>\r\n          </>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function ReadGenre(props){\r\n\r\n    return(\r\n        <>\r\n        <div style={{ marginBottom: '20px' }}>\r\n        <h2>Current Genres</h2>\r\n        <div style={{ padding: '5px' }}>\r\n          {props.genres.map((gen) => (\r\n            <Badge\r\n              style={{ marginRight: '5px' }}\r\n              pill\r\n              variant='secondary'\r\n              key={gen.genrename}\r\n            >\r\n              {gen.genrename}\r\n            </Badge>\r\n          ))}\r\n        </div>\r\n      </div>\r\n        </>\r\n    )\r\n\r\n}","import {  useState } from 'react';\r\nimport {  Form, Button } from 'react-bootstrap';\r\n\r\nexport default function CreateGenre(props) {\r\n    const [genreName, setGenreName] = useState('');\r\n\r\n\r\n    const onSubmitCreate = async (e) => {\r\n        e.preventDefault();\r\n        if (genreName.length > 1) {\r\n          const submit = await fetch('./api/genre', {\r\n            method: 'post',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              genrename: genreName.charAt(0).toUpperCase() + genreName.slice(1),\r\n            }),\r\n          });\r\n          const read = await submit.json();\r\n          props.setRefresh(read);\r\n          setGenreName('');\r\n        }\r\n      };\r\n  return (\r\n    <>\r\n      <h2>Create Genre</h2>\r\n      <div>\r\n        <Form onSubmit={onSubmitCreate}>\r\n          <Form.Group>\r\n            <Form.Label>Genre</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter genre name'\r\n              value={genreName}\r\n              onChange={(e) => setGenreName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' type='submit'>\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {  useState } from 'react';\r\nimport {  Form, Button } from 'react-bootstrap';\r\n\r\nexport default function DeleteGenre(props){\r\n    const [genreToDelete, setGenreToDelete] = useState('');\r\n    const onSubmitDelete = async (e) => {\r\n        e.preventDefault();\r\n        if (genreToDelete.length > 1) {\r\n          const submit = await fetch(`./api/genre/${genreToDelete}`, {\r\n            method: 'delete',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n            },\r\n          });\r\n          const read = await submit.json();\r\n    \r\n          props.setRefresh(read);\r\n          setGenreToDelete('');\r\n        }\r\n      };\r\n    return(\r\n        <>\r\n        <h2>Delete Genre</h2>\r\n        <div>\r\n          <Form onSubmit={onSubmitDelete}>\r\n            <Form.Group>\r\n              <Form.Label>Genres</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                value={genreToDelete}\r\n                onChange={(e) => setGenreToDelete(e.target.value)}\r\n              >\r\n                <option></option>\r\n                {props.genres.map((gen) => (\r\n                  <option key={gen.genrename}>{gen.genrename}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Delete\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport default function UpdateGenre(props) {\r\n  const [genreToUpdate, setGenreToUpdate] = useState('');\r\n  const [genreUpdateValue, setGenreUpdateValue] = useState('');\r\n  const onSubmitUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (genreToUpdate.length > 1) {\r\n      const submit = await fetch(`./api/genre/${genreToUpdate}`, {\r\n        method: 'put',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ genrename: genreUpdateValue }),\r\n      });\r\n      const read = await submit.json();\r\n\r\n      props.setRefresh(read);\r\n      setGenreUpdateValue('');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h2>Update Genre</h2>\r\n      <p>Select the genre to update and write bellow the new value.</p>\r\n      <div>\r\n        <Form onSubmit={onSubmitUpdate}>\r\n          <Form.Group>\r\n            <Form.Label>Genres</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={genreToUpdate}\r\n              onChange={(e) => setGenreToUpdate(e.target.value)}\r\n            >\r\n              <option></option>\r\n              {props.genres.map((gen) => (\r\n                <option key={gen.genrename}>{gen.genrename}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>New Genre name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter new genre name'\r\n              value={genreUpdateValue}\r\n              onChange={(e) => setGenreUpdateValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' type='submit'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport ReadGenre from './ReadGenre/ReadGenre';\r\nimport CreateGenre from './CreateGenre/CreateGenre';\r\nimport DeleteGenre from './DeleteGenre/DeleteGenre';\r\nimport UpdateGenre from './UpdateGenre/UpdateGenre';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\nexport default function Genre() {\r\n  \r\n  const [refresh, setRefresh] = useState({});\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  \r\n \r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/genre/');\r\n      const read = await data.json();\r\n      setGenres(read);\r\n    };\r\n    getData();\r\n  }, [refresh]);\r\n\r\n\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px'}}>\r\n        <ReadGenre genres={genres} />\r\n      </div>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <CreateGenre setRefresh={setRefresh}/>\r\n      </div>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px' }}>\r\n        <DeleteGenre setRefresh={setRefresh} genres={genres} />\r\n      </div>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px' }}>\r\n        <UpdateGenre setRefresh={setRefresh} genres={genres} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function ReadPlatform(props){\r\n\r\n    return(\r\n        <>\r\n        <div style={{ marginBottom: '20px' }}>\r\n        <h2>Current Platforms</h2>\r\n        <div style={{ padding: '5px' }}>\r\n          {props.platforms.map((plat) => (\r\n            <Badge\r\n              style={{ marginRight: '5px' }}\r\n              pill\r\n              variant='secondary'\r\n              key={plat.platformName}\r\n            >\r\n              {plat.platformName}\r\n            </Badge>\r\n          ))}\r\n        </div>\r\n      </div>\r\n        </>\r\n    )\r\n\r\n}","import {  useState } from 'react';\r\nimport {  Form, Button } from 'react-bootstrap';\r\n\r\nexport default function CreatePlatform(props) {\r\n    const [platformName, setPlatformName] = useState('');\r\n\r\n\r\n    const onSubmitCreate = async (e) => {\r\n        e.preventDefault();\r\n        if (platformName.length > 1) {\r\n          const submit = await fetch('./api/platform', {\r\n            method: 'post',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              platformName: platformName.charAt(0).toUpperCase() + platformName.slice(1),\r\n            }),\r\n          });\r\n          const read = await submit.json();\r\n          props.setRefresh(read);\r\n          setPlatformName('');\r\n        }\r\n      };\r\n  return (\r\n    <>\r\n      <h2>Create Platform</h2>\r\n      <div>\r\n        <Form onSubmit={onSubmitCreate}>\r\n          <Form.Group>\r\n            <Form.Label>Platform</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter platform name'\r\n              value={platformName}\r\n              onChange={(e) => setPlatformName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' type='submit'>\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {  useState } from 'react';\r\nimport {  Form, Button } from 'react-bootstrap';\r\n\r\nexport default function DeletePlatform(props){\r\n    const [platformToDelete, setPlatformToDelete] = useState('');\r\n    const onSubmitDelete = async (e) => {\r\n        e.preventDefault();\r\n        if (platformToDelete.length > 1) {\r\n          const submit = await fetch(`./api/platform/${platformToDelete}`, {\r\n            method: 'delete',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n            },\r\n          });\r\n          const read = await submit.json();\r\n    \r\n          props.setRefresh(read);\r\n          setPlatformToDelete('');\r\n        }\r\n      };\r\n    return(\r\n        <>\r\n        <h2>Delete Platforms</h2>\r\n        <div>\r\n          <Form onSubmit={onSubmitDelete}>\r\n            <Form.Group>\r\n              <Form.Label>Platforms</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                value={platformToDelete}\r\n                onChange={(e) => setPlatformToDelete(e.target.value)}\r\n              >\r\n                <option></option>\r\n                {props.platforms.map((plat) => (\r\n                  <option key={plat.platformName}>{plat.platformName}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Delete\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport default function UpdatePlatform(props) {\r\n  const [platformToUpdate, setPlatformToUpdate] = useState('');\r\n  const [platformUpdateValue, setPlatformUpdateValue] = useState('');\r\n  const onSubmitUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (platformToUpdate.length > 1) {\r\n      const submit = await fetch(`./api/platform/${platformToUpdate}`, {\r\n        method: 'put',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ platformName: platformUpdateValue }),\r\n      });\r\n      const read = await submit.json();\r\n\r\n      props.setRefresh(read);\r\n      setPlatformUpdateValue('');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h2>Update Platform</h2>\r\n      <p>Select the platform to update and write bellow the new value.</p>\r\n      <div>\r\n        <Form onSubmit={onSubmitUpdate}>\r\n          <Form.Group>\r\n            <Form.Label>Platforms</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={platformToUpdate}\r\n              onChange={(e) => setPlatformToUpdate(e.target.value)}\r\n            >\r\n              <option></option>\r\n              {props.platforms.map((plat) => (\r\n                <option key={plat.platformName}>{plat.platformName}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>New Platform name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter new platform name'\r\n              value={platformUpdateValue}\r\n              onChange={(e) => setPlatformUpdateValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' type='submit'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport ReadPlatform from './ReadPlatform/ReadPlatform';\r\nimport CreatePlatform from './CreatePlatform/CreatePlatform';\r\nimport DeletePlatform from './DeletePlatform/DeletePlatform';\r\nimport UpdatePlatform from './UpdatePlatform/UpdatePlatform';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\nexport default function Platform() {\r\n  \r\n  const [refresh, setRefresh] = useState({});\r\n  const [platforms, setPlatforms] = useState([]);\r\n\r\n  \r\n \r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/platform/');\r\n      const read = await data.json();\r\n      setPlatforms(read);\r\n    };\r\n    getData();\r\n  }, [refresh]);\r\n\r\n\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <ReadPlatform platforms={platforms} />\r\n      </div>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <CreatePlatform setRefresh={setRefresh}/>\r\n      </div>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <DeletePlatform setRefresh={setRefresh} platforms={platforms} />\r\n      </div>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <UpdatePlatform setRefresh={setRefresh} platforms={platforms} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Badge } from 'react-bootstrap';\r\n\r\nexport default function ReadStudios(props){\r\n\r\n    return(\r\n        <>\r\n        <div style={{ marginBottom: '20px' }}>\r\n        <h2>Current Studios</h2>\r\n        <div style={{ padding: '5px' }}>\r\n          {props.studios.map((studio) => (\r\n            <Badge\r\n              style={{ marginRight: '5px' }}\r\n              pill\r\n              variant='secondary'\r\n              key={studio.studioname}\r\n            >\r\n              {studio.studioname}\r\n            </Badge>\r\n          ))}\r\n        </div>\r\n      </div>\r\n        </>\r\n    )\r\n\r\n}","import {  useState } from 'react';\r\nimport {  Form, Button } from 'react-bootstrap';\r\n\r\nexport default function CreateStudio(props) {\r\n    const [studioName, setStudioName] = useState('');\r\n\r\n\r\n    const onSubmitCreate = async (e) => {\r\n        e.preventDefault();\r\n        if (studioName.length > 1) {\r\n          const submit = await fetch('./api/studio', {\r\n            method: 'post',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              studioname: studioName.charAt(0).toUpperCase() + studioName.slice(1),\r\n            }),\r\n          });\r\n          const read = await submit.json();\r\n          props.setRefresh(read);\r\n          setStudioName('');\r\n        }\r\n      };\r\n  return (\r\n    <>\r\n      <h2>Create Studio</h2>\r\n      <div>\r\n        <Form onSubmit={onSubmitCreate}>\r\n          <Form.Group>\r\n            <Form.Label>Studio</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter studio name'\r\n              value={studioName}\r\n              onChange={(e) => setStudioName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' type='submit'>\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {  useState } from 'react';\r\nimport {  Form, Button } from 'react-bootstrap';\r\n\r\nexport default function DeleteStudio(props){\r\n    const [studioToDelete, setStudioToDelete] = useState('');\r\n    const onSubmitDelete = async (e) => {\r\n        e.preventDefault();\r\n        if (studioToDelete.length > 1) {\r\n          const submit = await fetch(`./api/studio/${studioToDelete}`, {\r\n            method: 'delete',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n            },\r\n          });\r\n          const read = await submit.json();\r\n    \r\n          props.setRefresh(read);\r\n          setStudioToDelete('');\r\n        }\r\n      };\r\n    return(\r\n        <>\r\n        <h2>Delete Studio</h2>\r\n        <div>\r\n          <Form onSubmit={onSubmitDelete}>\r\n            <Form.Group>\r\n              <Form.Label>Studios</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                value={studioToDelete}\r\n                onChange={(e) => setStudioToDelete(e.target.value)}\r\n              >\r\n                <option></option>\r\n                {props.studios.map((studio) => (\r\n                  <option key={studio.studioname}>{studio.studioname}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Delete\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport default function UpdateStudio(props) {\r\n  const [studioToUpdate, setStudioToUpdate] = useState('');\r\n  const [studioUpdateValue, setStudioUpdateValue] = useState('');\r\n  const onSubmitUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (studioToUpdate.length > 1) {\r\n      const submit = await fetch(`./api/studio/${studioToUpdate}`, {\r\n        method: 'put',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ studioname: studioUpdateValue }),\r\n      });\r\n      const read = await submit.json();\r\n\r\n      props.setRefresh(read);\r\n      setStudioUpdateValue('');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h2>Update Studio</h2>\r\n      <p>Select the studio to update and write bellow the new value.</p>\r\n      <div>\r\n        <Form onSubmit={onSubmitUpdate}>\r\n          <Form.Group>\r\n            <Form.Label>Studios</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={studioToUpdate}\r\n              onChange={(e) => setStudioToUpdate(e.target.value)}\r\n            >\r\n              <option></option>\r\n              {props.studios.map((studio) => (\r\n                <option key={studio.studioname}>{studio.studioname}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>New Studio name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter new studio name'\r\n              value={studioUpdateValue}\r\n              onChange={(e) => setStudioUpdateValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant='primary' type='submit'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport ReadStudios from './ReadStudio/ReadStudios';\r\nimport CreateStudio from './CreateStudio/CreateStudio';\r\nimport DeleteStudio from './DeleteStudio/DeleteStudio';\r\nimport UpdateStudio from './UpdateStudio/UpdateStudio';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\nexport default function Studio() {\r\n  \r\n  const [refresh, setRefresh] = useState({});\r\n  const [studios, setStudios] = useState([]);\r\n\r\n  \r\n \r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/studio/');\r\n      const read = await data.json();\r\n      setStudios(read);\r\n    };\r\n    getData();\r\n  }, [refresh]);\r\n\r\n\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px'}}>\r\n        <ReadStudios studios={studios} />\r\n      </div>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <CreateStudio setRefresh={setRefresh}/>\r\n      </div>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px' }}>\r\n        <DeleteStudio setRefresh={setRefresh} studios={studios} />\r\n      </div>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px' }}>\r\n        <UpdateStudio setRefresh={setRefresh} studios={studios} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Card, CardColumns } from 'react-bootstrap';\r\n\r\nexport default function ReadGame(props) {\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h2>Current Games</h2>\r\n        <div style={{ padding: '5px' }}>\r\n          <CardColumns>\r\n            {props.games.map((game) => (\r\n              <Card key={game.gameID} style={{ maxWidth: '300px' }}>\r\n                <Card.Img variant='top' src={game.cover} />\r\n                <Card.Body>\r\n                  <Card.Title style={{ color: 'black' }}>\r\n                    {game.gamename}\r\n                  </Card.Title>\r\n                  <Card.Text style={{ color: '#212529' }}>\r\n                    <>\r\n                      <strong>Genre: </strong>\r\n                      {game.genre}\r\n                    </>\r\n                  </Card.Text>\r\n                  <Card.Text style={{ color: '#212529' }}>\r\n                    <>\r\n                      <strong>Studio: </strong>\r\n                      {game.gameStudio}\r\n                    </>\r\n                  </Card.Text>\r\n                  <Card.Text style={{ color: '#212529' }}>\r\n                    <>\r\n                      <strong>No. of Players: </strong>\r\n                      {game.numberOfPLayers}\r\n                    </>\r\n                  </Card.Text>\r\n                  <Card.Text style={{ color: '#212529' }}>\r\n                    <>\r\n                      <strong>Budget: </strong>\r\n                      <span>$</span>\r\n                      {game.budget.toLocaleString()}\r\n                    </>\r\n                  </Card.Text>\r\n                  <Card.Text style={{ color: '#212529' }}>\r\n                    <>\r\n                      <strong>Platforms: </strong>\r\n                      {game.platforms}\r\n                    </>\r\n                  </Card.Text>\r\n                  <Card.Text style={{ color: '#212529' }}>\r\n                    <>\r\n                      <strong>Min Req: </strong>\r\n                      {game.minRequirements}\r\n                    </>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                  <small className='text-muted'>{new Date(game.releaseDate).toLocaleString('en-US')}</small>\r\n                </Card.Footer>\r\n              </Card>\r\n            ))}\r\n          </CardColumns>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState,useRef } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport default function CreateGame(props) {\r\n  const [gameName, setGameName] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [studio, setStudio] = useState('');\r\n  const [platform, setPlatform] = useState([]);\r\n  const [coverUrl,setCoverUrl]=useState('');\r\n  const [numberOfPlayers, setNumberOfPlayers] = useState(0);\r\n  const [budget, setBudget] = useState(0);\r\n  const [minReq, setMinReq] = useState('');\r\n  const [dateCreated, setDateCreated] = useState('');\r\n\r\n  const selected = useRef('');\r\n  const onSubmitCreate = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      gameName.length > 1 &&\r\n      genre.length > 1 &&\r\n      studio.length > 1 &&\r\n      platform.length > 0 &&\r\n      numberOfPlayers > 0 &&\r\n      budget > 0 &&\r\n      minReq.length>0&&\r\n      dateCreated\r\n    ) {\r\n      const gameObject = {\r\n        genre: genre,\r\n        gamename: gameName.charAt(0).toUpperCase() + gameName.slice(1),\r\n        numberOfPlayers: numberOfPlayers,\r\n        budget: budget,\r\n        gameStudio: studio,\r\n        cover:coverUrl,\r\n        minRequirements: minReq,\r\n        platform: platform,\r\n        releaseDate: dateCreated,\r\n      };\r\n      const submit = await fetch('./api/game', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(gameObject),\r\n      });\r\n      const read = await submit.json();\r\n      props.setRefresh(read);\r\n      setGameName('');\r\n      setGenre('');\r\n      setStudio('');\r\n      setPlatform([]);\r\n      setNumberOfPlayers(0);\r\n      setBudget(0);\r\n      setMinReq('');\r\n      setDateCreated('');\r\n    }\r\n  };\r\n\r\n\r\n  const getSelectedOptions =()=>{\r\n    const node = selected.current;\r\n    const selectedVal = [...node.children].filter(opt=>opt.selected).map(opt=>opt.value)\r\n    setPlatform(selectedVal)\r\n  }\r\n  return (\r\n    <>\r\n      <h2>Create Game</h2>\r\n      <div>\r\n        <Form onSubmit={onSubmitCreate}>\r\n          <Form.Group>\r\n            <Form.Label>Game Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter game name'\r\n              value={gameName}\r\n              onChange={(e) => setGameName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Genre</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={genre}\r\n              onChange={(e) => setGenre(e.target.value)}\r\n            >\r\n              <option></option>\r\n              {props.genres.map((gen) => (\r\n                <option key={gen.genrename}>{gen.genrename}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Studio</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={studio}\r\n              onChange={(e) => setStudio(e.target.value)}\r\n            >\r\n              <option></option>\r\n              {props.studios.map((studio) => (\r\n                <option key={studio.studioname}>{studio.studioname}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Platform</Form.Label>\r\n            <Form.Control\r\n              ref={selected}\r\n              as='select'\r\n              multiple\r\n              value={platform}\r\n              onChange={(e) =>{ getSelectedOptions()}}\r\n            >\r\n              <option></option>\r\n              {props.platforms.map((platform) => (\r\n                <option key={platform.platformName}>\r\n                  {platform.platformName}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Game Cover</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter game cover url'\r\n              value={coverUrl}\r\n              onChange={(e) => setCoverUrl(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>No. of players</Form.Label>\r\n            <Form.Control\r\n              type='number'\r\n              placeholder='Enter number of players'\r\n              value={numberOfPlayers}\r\n              onChange={(e) => setNumberOfPlayers(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Budget</Form.Label>\r\n            <Form.Control\r\n              type='number'\r\n              placeholder='Enter budget'\r\n              value={budget}\r\n              onChange={(e) => setBudget(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Min. Requirements</Form.Label>\r\n            <Form.Control\r\n              as='textarea'\r\n              rows={3}\r\n              placeholder='Enter Min req'\r\n              value={minReq}\r\n              onChange={(e) => setMinReq(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Release date</Form.Label>\r\n            <Form.Control\r\n              type='date'\r\n              placeholder='Enter Min req'\r\n              value={dateCreated}\r\n              onChange={(e) => setDateCreated(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {  useState } from 'react';\r\nimport {  Form, Button } from 'react-bootstrap';\r\n\r\nexport default function DeleteGame(props){\r\n    const [gameToDelete, setGameToDelete] = useState('');\r\n    const onSubmitDelete = async (e) => {\r\n        e.preventDefault();\r\n        if (gameToDelete.length > 1) {\r\n          const submit = await fetch(`./api/game/${gameToDelete}`, {\r\n            method: 'delete',\r\n            headers: {\r\n              'Content-type': 'application/json',\r\n            },\r\n          });\r\n          const read = await submit.json();\r\n    \r\n          props.setRefresh(read);\r\n          setGameToDelete('');\r\n        }\r\n      };\r\n    return(\r\n        <>\r\n        <h2>Delete Game</h2>\r\n        <div>\r\n          <Form onSubmit={onSubmitDelete}>\r\n            <Form.Group>\r\n              <Form.Label>Games</Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                value={gameToDelete}\r\n                onChange={(e) => setGameToDelete(e.target.value)}\r\n              >\r\n                <option></option>\r\n                {props.games.map((game) =>(\r\n                  <option key={game.gameID} value={game.gameID}>{game.gamename}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button variant='primary' type='submit'>\r\n              Delete\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState, useRef, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport default function UpdateGame(props) {\r\n  const [gameName, setGameName] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [studio, setStudio] = useState('');\r\n  const [platform, setPlatform] = useState([]);\r\n  const [coverUrl, setCoverUrl] = useState('');\r\n  const [numberOfPlayers, setNumberOfPlayers] = useState(0);\r\n  const [budget, setBudget] = useState(0);\r\n  const [minReq, setMinReq] = useState('');\r\n  const [dateCreated, setDateCreated] = useState('');\r\n  const [gameToEdit, setGameToEdit] = useState('');\r\n  const selected = useRef('');\r\n\r\n  useEffect(() => {\r\n    const games = props.games;\r\n    if (gameToEdit) {\r\n      const game = games.filter((g) => g.gameID === parseInt(gameToEdit))[0];\r\n      setGameName(game.gamename);\r\n      setGenre(game.genre);\r\n      setStudio(game.gameStudio);\r\n      setPlatform(game.platforms.replaceAll(' ', '').split(','));\r\n      setCoverUrl(game.cover);\r\n      setNumberOfPlayers(game.numberOfPLayers);\r\n      setBudget(game.budget);\r\n      setMinReq(game.minRequirements);\r\n      const gamedate = new Date(game.releaseDate);\r\n      const year = gamedate.getFullYear();\r\n      const month = gamedate.getMonth() + 1;\r\n      const date = gamedate.getDate();\r\n      setDateCreated(`${year}-${month < 10 ? '0' + month : month}-${date}`);\r\n    }\r\n  }, [gameToEdit, props.games]);\r\n\r\n  const onSubmitCreate = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (\r\n      gameName.length > 1 &&\r\n      genre.length > 1 &&\r\n      studio.length > 1 &&\r\n      platform.length > 0 &&\r\n      numberOfPlayers > 0 &&\r\n      budget > 0 &&\r\n      minReq.length > 0 &&\r\n      dateCreated\r\n    ) {\r\n      const gameObject = {\r\n        genre: genre,\r\n        gamename: gameName.charAt(0).toUpperCase() + gameName.slice(1),\r\n        numberOfPlayers: numberOfPlayers,\r\n        budget: budget,\r\n        gameStudio: studio,\r\n        cover: coverUrl,\r\n        minRequirements: minReq,\r\n        platform: platform,\r\n        releaseDate: dateCreated,\r\n      };\r\n      \r\n      const submit = await fetch(`./api/game/${gameToEdit}`, {\r\n        method: 'put',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(gameObject),\r\n      });\r\n      const read = await submit.json();\r\n      props.setRefresh(read);\r\n      setGameName('');\r\n      setGenre('');\r\n      setStudio('');\r\n      setPlatform([]);\r\n      setNumberOfPlayers(0);\r\n      setBudget(0);\r\n      setMinReq('');\r\n      setDateCreated('');\r\n    }\r\n  };\r\n\r\n  const getSelectedOptions = () => {\r\n    const node = selected.current;\r\n    const selectedVal = [...node.children]\r\n      .filter((opt) => opt.selected)\r\n      .map((opt) => opt.value);\r\n    setPlatform(selectedVal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Update Game</h2>\r\n      <div>\r\n        <Form.Group>\r\n          <Form.Label>Select game to update</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            value={gameToEdit}\r\n            onChange={(e) => setGameToEdit(e.target.value)}\r\n          >\r\n            <option></option>\r\n            {props.games.map((game) => (\r\n              <option key={game.gameID} value={game.gameID}>\r\n                {game.gamename}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form onSubmit={onSubmitCreate}>\r\n          <Form.Group>\r\n            <Form.Label>Game Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter game name'\r\n              value={gameName}\r\n              onChange={(e) => setGameName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Genre</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={genre}\r\n              onChange={(e) => setGenre(e.target.value)}\r\n            >\r\n              <option></option>\r\n              {props.genres.map((gen) => (\r\n                <option key={gen.genrename}>{gen.genrename}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Studio</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={studio}\r\n              onChange={(e) => setStudio(e.target.value)}\r\n            >\r\n              <option></option>\r\n              {props.studios.map((studio) => (\r\n                <option key={studio.studioname}>{studio.studioname}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Platform</Form.Label>\r\n            <Form.Control\r\n              ref={selected}\r\n              as='select'\r\n              multiple\r\n              value={platform}\r\n              onChange={(e) => {\r\n                getSelectedOptions();\r\n              }}\r\n            >\r\n              <option></option>\r\n              {props.platforms.map((platform) => (\r\n                <option key={platform.platformName}>\r\n                  {platform.platformName}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Game Cover</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter game cover url'\r\n              value={coverUrl}\r\n              onChange={(e) => setCoverUrl(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>No. of players</Form.Label>\r\n            <Form.Control\r\n              type='number'\r\n              placeholder='Enter number of players'\r\n              value={numberOfPlayers}\r\n              onChange={(e) => setNumberOfPlayers(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Budget</Form.Label>\r\n            <Form.Control\r\n              type='number'\r\n              placeholder='Enter budget'\r\n              value={budget}\r\n              onChange={(e) => setBudget(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Min. Requirements</Form.Label>\r\n            <Form.Control\r\n              as='textarea'\r\n              rows={3}\r\n              placeholder='Enter Min req'\r\n              value={minReq}\r\n              onChange={(e) => setMinReq(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Release date</Form.Label>\r\n            <Form.Control\r\n              type='date'\r\n              placeholder='Enter Min req'\r\n              value={dateCreated}\r\n              onChange={(e) => setDateCreated(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport ReadGame from './ReadGame/ReadGame';\r\nimport CreateGame from './CreateGame/CreateGame';\r\nimport DeleteGame from './DeleteGame/DeleteGame';\r\nimport UpdateGenre from './UpdateGame/UpdateGame';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\nexport default function Game() {\r\n  \r\n  const [refresh, setRefresh] = useState({});\r\n  const [genres, setGenres] = useState([]);\r\n  const [studios, setStudios] = useState([]);\r\n  const [platforms, setPlatforms] = useState([]);\r\n\r\n  const [games,setGames]=useState([]);\r\n \r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/genre/');\r\n      const read = await data.json();\r\n      setGenres(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/platform/');\r\n      const read = await data.json();\r\n      setPlatforms(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/studio/');\r\n      const read = await data.json();\r\n      setStudios(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/game/');\r\n      const read = await data.json();\r\n      setGames(read);\r\n    };\r\n    getData();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      \r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <CreateGame platforms={platforms} studios={studios} genres={genres} setRefresh={setRefresh}/>\r\n      </div>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px' }}>\r\n        <DeleteGame setRefresh={setRefresh} games={games} />\r\n      </div>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px' }}>\r\n        <UpdateGenre setRefresh={setRefresh} platforms={platforms} studios={studios} genres={genres} games={games} />\r\n      </div>\r\n      <div className={styles.boxWithShadow}  style={{ marginBottom: '20px'}}>\r\n        \r\n          <ReadGame games={games} />\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\nexport default function Publish() {\r\n  const [games, setGames] = useState([]);\r\n  const [gameToWrite, setGameToWrite] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [userWhoWrites, setUserWhoWrites] = useState('');\r\n  const [supervisor, setSupervisor] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [content, setContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/game/');\r\n      const read = await data.json();\r\n      setGames(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/users/');\r\n      const read = await data.json();\r\n      setUsers(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const onSubmitCreate = async (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      game: gameToWrite,\r\n      title: title,\r\n      rating: rating,\r\n      content: content,\r\n      author: userWhoWrites,\r\n      supervisor: supervisor,\r\n    };\r\n    const submit = await fetch(`./api/reviews/`, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const read = await submit.json();\r\n    if (read) {\r\n      setGameToWrite('');\r\n      setUserWhoWrites('');\r\n      setSupervisor('');\r\n      setTitle('');\r\n      setRating(0);\r\n      setContent('');\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <h2>Write a Review</h2>\r\n        <Form.Group>\r\n          <Form.Label>Select game to write about</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            value={gameToWrite}\r\n            onChange={(e) => setGameToWrite(e.target.value)}\r\n          >\r\n            <option></option>\r\n            {games.map((game) => (\r\n              <option key={game.gameID} value={game.gameID}>\r\n                {game.gamename}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Select your name</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            value={userWhoWrites}\r\n            onChange={(e) => setUserWhoWrites(e.target.value)}\r\n          >\r\n            <option></option>\r\n            {users.map((user) => (\r\n              <option key={user.employeeID} value={user.employeeID}>\r\n                {user.employeename}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Select your supervisor</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            value={supervisor}\r\n            onChange={(e) => setSupervisor(e.target.value)}\r\n          >\r\n            <option></option>\r\n            {users.map((user) => (\r\n              <option key={user.employeeID} value={user.employeeID}>\r\n                {user.employeename}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form onSubmit={onSubmitCreate}>\r\n          <Form.Group>\r\n            <Form.Label>Review Title</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Write the title here'\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Game Rating: {rating}</Form.Label>\r\n            <Form.Control\r\n              type='range'\r\n              max={5}\r\n              min={0}\r\n              step={0.1}\r\n              placeholder='Write the review here'\r\n              value={rating}\r\n              onChange={(e) => setRating(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Content</Form.Label>\r\n            <Form.Control\r\n              as='textarea'\r\n              rows={8}\r\n              placeholder='Write the content here'\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport CarouselImgs from '../SharedComponents/CarouselImgs/CarouselImgs';\r\nimport ReviewCards from '../SharedComponents/ReviewCards/ReviewCards';\r\nimport { CardColumns } from 'react-bootstrap';\r\nimport {xboxCarouselImgs} from '../localPageData';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\n\r\nexport default function Xbox() {\r\n  const [currentReviews, setCurrentReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/reviews/platform/Xbox');\r\n      const read = await data.json();\r\n      setCurrentReviews(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CarouselImgs pictures={xboxCarouselImgs} />\r\n      <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <h2>Current Xbox Reviews</h2>\r\n        <CardColumns>\r\n          {currentReviews.map((review) => (\r\n            <ReviewCards\r\n              key={review.reviewID}\r\n              id={review.reviewID}\r\n              img={review.cover}\r\n              title={review.title}\r\n              content={review.content}\r\n              lastUpdated={review.date_created}\r\n            />\r\n          ))}\r\n        </CardColumns>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport CarouselImgs from '../SharedComponents/CarouselImgs/CarouselImgs';\r\nimport ReviewCards from '../SharedComponents/ReviewCards/ReviewCards';\r\nimport { CardColumns } from 'react-bootstrap';\r\nimport {playstationImgs} from '../localPageData';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\n\r\nexport default function Playstation() {\r\n  const [currentReviews, setCurrentReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/reviews/platform/Playstation');\r\n      const read = await data.json();\r\n      setCurrentReviews(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CarouselImgs pictures={playstationImgs} />\r\n      <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <h2>Current Playstation Reviews</h2>\r\n        <CardColumns>\r\n          {currentReviews.map((review) => (\r\n            <ReviewCards\r\n              key={review.reviewID}\r\n              id={review.reviewID}\r\n              img={review.cover}\r\n              title={review.title}\r\n              content={review.content}\r\n              lastUpdated={review.date_created}\r\n            />\r\n          ))}\r\n        </CardColumns>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport CarouselImgs from '../SharedComponents/CarouselImgs/CarouselImgs';\r\nimport ReviewCards from '../SharedComponents/ReviewCards/ReviewCards';\r\nimport { CardColumns } from 'react-bootstrap';\r\nimport {pcCarImgs} from '../localPageData';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\n\r\nexport default function Pc() {\r\n  const [currentReviews, setCurrentReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/reviews/platform/PC');\r\n      const read = await data.json();\r\n      setCurrentReviews(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CarouselImgs pictures={pcCarImgs} />\r\n      <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <h2>Current PC Reviews</h2>\r\n        <CardColumns>\r\n          {currentReviews.map((review) => (\r\n            <ReviewCards\r\n              key={review.reviewID}\r\n              id={review.reviewID}\r\n              img={review.cover}\r\n              title={review.title}\r\n              content={review.content}\r\n              lastUpdated={review.date_created}\r\n            />\r\n          ))}\r\n        </CardColumns>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport CarouselImgs from '../SharedComponents/CarouselImgs/CarouselImgs';\r\nimport ReviewCards from '../SharedComponents/ReviewCards/ReviewCards';\r\nimport { CardColumns } from 'react-bootstrap';\r\nimport {nintendoImgs} from '../localPageData';\r\nimport styles from '../SharedComponents/Styles/sharedStyles.module.css';\r\n\r\nexport default function Nintendo() {\r\n  const [currentReviews, setCurrentReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await fetch('./api/reviews/platform/Nintendo');\r\n      const read = await data.json();\r\n      setCurrentReviews(read);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CarouselImgs pictures={nintendoImgs} />\r\n      <div style={{ padding: '10px' }}>\r\n      <div className={styles.boxWithShadow} style={{ marginBottom: '20px' }}>\r\n        <h2>Current Nintendo Reviews</h2>\r\n        <CardColumns>\r\n          {currentReviews.map((review) => (\r\n            <ReviewCards\r\n              key={review.reviewID}\r\n              id={review.reviewID}\r\n              img={review.cover}\r\n              title={review.title}\r\n              content={review.content}\r\n              lastUpdated={review.date_created}\r\n            />\r\n          ))}\r\n        </CardColumns>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import NavBarApp from './NavBar/NavBarApp';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Context/AuthContext';\nimport Login from './Login/Login';\nimport useAuth from './useAuth/useAuth';\nimport Home from './Home/Home';\nimport SearchPage from './SearchPage/SearchPage';\nimport ReviewPage from './ReviewPage/ReviewPage';\nimport Genre from './Genre/Genre';\nimport Platform from './Platform/Platform';\nimport Studio from './Studio/Studio';\nimport Game from './Game/Game';\nimport Publish from './Publish/Publish';\nimport Xbox from './Xbox/Xbox'\nimport Playstation from './Playstation/Playstation';\nimport PC from './PC/PC';\nimport Nintendo from './Nintendo/Nintendo';\n\nfunction App() {\n  const auth = useAuth();\n  return (\n    <div className='App'>\n      <AuthContext.Provider value={auth}>\n        <BrowserRouter>\n          <NavBarApp />\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route exact path='/xbox'><Xbox/></Route>\n            <Route exact path='/playstation'><Playstation/></Route>\n            <Route exact path='/pc'><PC/></Route>\n            <Route exact path='/nintendo'><Nintendo/></Route>\n            <Route exact path='/genre'>\n              <Genre />\n            </Route>\n            <Route exact path='/platform'><Platform/></Route>\n            <Route exact path='/studio'><Studio/></Route>\n            <Route exact path='/publish'><Publish/></Route>\n            <Route exact path='/games'><Game/></Route>\n            <Route exact path='/search/:query'>\n              <SearchPage />\n            </Route>\n            <Route exact path='/review/:reviewid'>\n              <ReviewPage />\n            </Route>\n            <Route exact path='/signin'>\n              <Login />\n            </Route>\n            <Redirect from='*' to='/' />\n          </Switch>\n        </BrowserRouter>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxWithShadow\":\"sharedStyles_boxWithShadow__RfGo9\",\"addShadow\":\"sharedStyles_addShadow__BaR9G\"};"],"sourceRoot":""}